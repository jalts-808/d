apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My workflow

on:
  push:
    branches:
      - '**'

jobs:
  build:
    steps:
      # 1) Checkout code (Alpine container is fine just for a simple git clone)
      - name: Checkout repository
        uses: docker://alpine/git
        shell: sh
        run: |
          git clone https://github.com/jalts-808/d.git .

      # 2) Create a Python venv & install your Django requirements
      - name: Set up Python environment
        uses: docker://python:3.12
        shell: sh
        run: |
          python -m venv /workspace/venv
          . /workspace/venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # 3) Install Launchable + Java (default-jre) + Git, then verify
      - name: Install + Verify Launchable CLI
        uses: docker://python:3.12
        shell: sh
        env:
          LAUNCHABLE_TOKEN: ${{ secrets.LaunchableToken }}
        run: |
          # On Debian 12, openjdk-11-jre is not available.
          # 'default-jre' installs OpenJDK 17, which is fine for Launchable.
          apt-get update
          apt-get install -y default-jre git

          # Silence "dubious ownership" warnings
          git config --global --add safe.directory /cloudbees/workspace

          . /workspace/venv/bin/activate
          pip install --upgrade launchable~=1.0

          # Just to confirm 'launchable' is on PATH
          which launchable

          # Verify connectivity (Java is now installed, so commit collection can work)
          launchable verify || true

      # 4) Run migrations
      - name: Run migrations
        uses: docker://python:3.12
        shell: sh
        run: |
          . /workspace/venv/bin/activate
          cd ecom
          python manage.py migrate

      # 5) Collect static files
      - name: Collect static files
        uses: docker://python:3.12
        shell: sh
        run: |
          . /workspace/venv/bin/activate
          cd ecom
          python manage.py collectstatic --noinput

      # 6) Run tests with Launchable session
      - name: Run tests with Launchable session
        uses: docker://python:3.12
        shell: sh
        continue-on-error: true
        env:
          LAUNCHABLE_TOKEN: ${{ secrets.LaunchableToken }}
        run: |
          # Because each Tekton step is a new container, we must re-install Java + Git here
          apt-get update
          apt-get install -y default-jre git
          git config --global --add safe.directory /cloudbees/workspace

          . /workspace/venv/bin/activate
          cd ecom

          # Record a build (this collects commit info -> Java needed)
          launchable record build --source . --name "$(git rev-parse HEAD)"

          # Start a test session
          launchable record session pytest --name "$(date +%s)"

          # Run the tests
          pytest --maxfail=5 --disable-warnings --junitxml=/workspace/test-results.xml
          ls -l /workspace

      # 7) Publish test results
      - name: Publish test results
        uses: cloudbees-io/publish-test-results@v1
        with:
          test-type: JUnit
          folder-name: /workspace/test-results.xml
